---

- name: Cassandra Distro
  debug: msg="Cassandra v{{ cassandra_version }} - Datastax Community Edition"

- name: Download and install cassandra apt public signing key | Debian
  apt_key: url="{{ cassandra_signing_key_url }}" state=present
  when: ansible_os_family|lower == 'debian'

- name: Add cassandra apt repository definition to apt sources list | Debian
  apt_repository: repo="{{ cassandra_dsc_apt_repo }}" update_cache=yes state=present
  when: ansible_os_family|lower == 'debian'

- name: Install cassandra | Debian
  apt: name="cassandra={{ cassandra_version }}" state=present
  when: ansible_os_family|lower == 'debian'
  register: deb_install

- name: Install cassandra datastax community package | Debian
  apt: name="dsc{{ cassandra_dsc_pkg_suffix }}={{ cassandra_dsc_version }}" state=present
  when: ansible_os_family|lower == 'debian'

- name: Add cassandra yum repository configuration | RedHat
  template:
    src:   datastax-dsc.yum.repo.j2
    dest:  /etc/yum.repos.d/datastax.repo
    owner: root
    group: root
    mode:  0644
  when: ansible_os_family|lower == 'redhat'

- name: Install cassandra | RedHat
  package:
    name: "cassandra{{ cassandra_dsc_pkg_suffix }}-{{ cassandra_version }}"
    state: present
  when: ansible_os_family|lower == 'redhat'
  register: rpm_install

- name: Install cassandra datastax community package | RedHat
  package:
    name: "dsc{{ cassandra_dsc_pkg_suffix }}-{{ cassandra_dsc_version }}"
    state: present
  when: ansible_os_family|lower == 'redhat'
  register: rpm_install

- name: Check for pointers of first install - default cluster_name
  shell: grep cluster_name {{ cassandra_conf_dir }}/cassandra.yaml
  register: result

- debug: var=result

- name: Reload systemd for cassandra | Redhat
  shell: systemctl daemon-reload
  when: rpm_install|changed

- name: Stop cassandra if first install
  service: name=cassandra state=stopped
  when: (deb_install|changed or rpm_install|changed) and result.stdout.find('Test Cluster') != -1 or cassandra_reinitialize_cluster

- name: Remove default cluster_name from the system table of first install
  file: path={{ cassandra_home_dir }}/{{ item }} state=absent
  when: (deb_install|changed or rpm_install|changed) and result.stdout.find('Test Cluster') != -1 or cassandra_reinitialize_cluster
  with_items:
    - data
    - commitlog
    - saved_caches

- include: fqdn.yml
  when: cassandra_seeds_fqdns

- name: Create cassandra.yaml config file
  template: 
    src:   dsc-cassandra.yaml.j2
    dest:  "{{ cassandra_conf_dir }}/cassandra.yaml"
    owner: root
    group: root
    mode:  0644
  notify: 
    - Restart cassandra

- name: Copy cassandra-env.sh file
  template: 
    src:   dsc-cassandra-env.sh.j2
    dest:  "{{ cassandra_conf_dir }}/cassandra-env.sh"
    owner: root
    group: root
    mode:  0644
  notify: 
    - Restart cassandra

- name: Create other cassandra config files
  template: 
    src:   "{{ item }}.j2"
    dest:  "{{ cassandra_conf_dir }}/{{ item }}"
    owner: root
    group: root
    mode:  0644
  with_items:
    - cassandra-rackdc.properties
    - cassandra-topology.properties
    - cassandra-topology.yaml
    - commitlog_archiving.properties
    - logback-tools.xml
    - logback.xml
  notify: 
    - Restart cassandra

- name: Create cassandra triggers directory
  file:
    path:  "{{ cassandra_conf_dir }}/triggers"
    owner: "{{ cassandra_user }}"
    group: "{{ cassandra_group }}"
    mode:  0755
    state: directory

- name: Create cassandra default settings file
  template: 
    src:   etc.default.cassandra.j2
    dest:  "/etc/default/cassandra"
    owner: root
    group: root
    mode:  0644
  notify: 
    - Restart cassandra

- name: Ensure correct cassandra directories ownership and permission
  file:
    path:  "{{ item }}"
    owner: "{{ cassandra_user }}"
    group: "{{ cassandra_group }}"
    mode:  0755
    state: directory
  with_items:
    - "{{ cassandra_log_dir }}"
    - "{{ cassandra_home_dir }}"
    - "{{ cassandra_pid_dir }}"
  notify: 
    - Restart cassandra
   
- name: Start cassandra
  service: name=cassandra enabled=yes state=started
